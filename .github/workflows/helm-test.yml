name: Helm Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
 
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0

      - name: Install Helm Chart in namespace `fluxcd-viewer`
        if: steps.list-changed.outputs.changed == 'true'
        run: helm install fluxcd-viewer ./charts/fluxcd-viewer --namespace fluxcd-viewer --create-namespace

      - name: Wait for Pods to be ready in namespace `fluxcd-viewer`
        if: steps.list-changed.outputs.changed == 'true'
        run: sleep 120
      
      - name: Check Pod status in namespace `fluxcd-viewer`
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl get pods -n fluxcd-viewer

      - name: Print logs for a pod with label `app=fluxcd-viewer`
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl logs -n fluxcd-viewer -l app=fluxcd-viewer
      
      - name: Check if fluxcd-viewer pod is running
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          STATUS=$(kubectl get pods -l app=fluxcd-viewer -n fluxcd-viewer -o jsonpath="{.items[*].status.phase}")
          if [ "$STATUS" != "Running" ]; then
            echo "Pod is not in Running state: $STATUS"
            exit 1
          fi
          echo "All pods are in the Running state."
